/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2018-12-26 06:47:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.board.model.vo.*;
import java.util.*;
import com.kh.member.model.vo.*;

public final class boardView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1545213210746L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1544431600123L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.kh.board.model.vo");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("com.kh.member.model.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	/* Member memberLoggedIn = (Member)request.getAttribute("memberLoggedIn"); */
	Member memberLoggedIn = (Member)session.getAttribute("memberLoggedIn");
	
	// 전송된 쿠키확인
	boolean saveId = false;
	String memberId = "";
	Cookie[] cookies = request.getCookies(); // 배열 타입을 리턴한다.
	// System.out.println("브라우저가 전송한 쿠키목록@header.jsp");
	// System.out.println("-------------------------------------");
	for(Cookie c : cookies){
		String key = c.getName();
		String value = c.getValue();
	// System.out.printf("%s = %s\n", key, value);
		if("saveId".equals(key)){
			saveId = true;
			memberId = value; // abcde
		}
	}
	System.out.println("-------------------------------------");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Hello MVC</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\" />\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("function loginValidate(){\r\n");
      out.write("\tif($(\"#memberId\").val().trim().length == 0){\r\n");
      out.write("\t\talert(\"아이디를 입력하세요.\");\r\n");
      out.write("\t\t$(\"#memberId\").focus();\r\n");
      out.write("\t\treturn false; // 폼 전송 방지\r\n");
      out.write("\t}\r\n");
      out.write("\tif($(\"#password\").val().trim().length == 0){\r\n");
      out.write("\t\talert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("\t\t$(\"#password\").focus();\r\n");
      out.write("\t\treturn false; // 폼 전송 방지\r\n");
      out.write("\t}\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 마이페이지 이동함수 */\r\n");
      out.write("function goMyPage(){\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t// null인 객체(memberLoggedIn)에 대해 메소드를 실행시키려고 했기 때문에 에러 발생\r\n");
      out.write("\t// 로그인 하기 전에는 memberLoggedIn가 null이기 때문\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <div id=\"container\">\r\n");
      out.write("      <header>\r\n");
      out.write("         <h1>Hello MVC</h1>\r\n");
      out.write("         <!--로그인 시작  -->\r\n");
      out.write("         <div class=\"login-container\">\r\n");
      out.write("         ");
if(memberLoggedIn == null){ 
      out.write("\r\n");
      out.write("            <form action=\"");
      out.print(request.getContextPath());
      out.write("/member/login\" method=\"post\" id=\"loginFrm\">\r\n");
      out.write("               <table>\r\n");
      out.write("                  <tr>\r\n");
      out.write("                  <td>\r\n");
      out.write("                     <input type=\"text\" \r\n");
      out.write("                     \t    name=\"memberId\"\r\n");
      out.write("                     \t    id=\"memberId\"\r\n");
      out.write("                     \t    value=\"");
      out.print(memberId );
      out.write("\"\r\n");
      out.write("                     \t    placeholder=\"아이디\" />\r\n");
      out.write("                  </td>\r\n");
      out.write("                  <td></td>\r\n");
      out.write("                  </tr>\r\n");
      out.write("                  <tr>\r\n");
      out.write("                     <td>\r\n");
      out.write("                        <input type=\"password\" \r\n");
      out.write("                        \t   name=\"password\"\r\n");
      out.write("                        \t   id=\"password\"\r\n");
      out.write("                        \t   placeholder=\"비밀번호\" />\r\n");
      out.write("                     </td>\r\n");
      out.write("                     <td>\r\n");
      out.write("                     \t<input type=\"submit\" \r\n");
      out.write("                     \t\t   value=\"로그인\" \r\n");
      out.write("                     \t\t   onclick=\"return loginValidate();\"/>\r\n");
      out.write("                     </td>\r\n");
      out.write("                  </tr>\r\n");
      out.write("                  <tr>\r\n");
      out.write("                  \t<td colspan=\"2\">\r\n");
      out.write("                  \t\t<input type=\"checkbox\" \r\n");
      out.write("                  \t\t\t   name=\"saveId\"\r\n");
      out.write("                  \t\t\t   id=\"saveId\" \r\n");
      out.write("                  \t\t\t   ");
      out.print(saveId?"checked":"" );
      out.write("/>\r\n");
      out.write("                  \t\t<label for=\"saveId\">\r\n");
      out.write("                  \t\t아이디저장\r\n");
      out.write("                  \t\t</label>\r\n");
      out.write("                  \t\t&nbsp;&nbsp;\r\n");
      out.write("                  \t\t<input type=\"button\" \r\n");
      out.write("                  \t\t\t   value=\"회원가입\"\r\n");
      out.write("                  \t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/member/memberEnroll'\" />\r\n");
      out.write("                  \t</td>\r\n");
      out.write("                  </tr>\r\n");
      out.write("               </table>\r\n");
      out.write("         \r\n");
      out.write("         </form>\r\n");
      out.write("         ");
 }
         else {
      out.write("\r\n");
      out.write("         \t<table id=\"logged-in\">\r\n");
      out.write("         \t\t<tr>\r\n");
      out.write("         \t\t\t<td>\r\n");
      out.write("         \t\t\t\t");
      out.print(memberLoggedIn.getMemberName() );
      out.write("님,\r\n");
      out.write("         \t\t\t\t안녕하세요 :)\r\n");
      out.write("         \t\t\t</td>\r\n");
      out.write("         \t\t</tr>\r\n");
      out.write("         \t\t<tr>\r\n");
      out.write("         \t\t\t<td>\r\n");
      out.write("         \t\t\t\t<input type=\"button\" \r\n");
      out.write("         \t\t\t\t\t   value=\"내정보보기\"\r\n");
      out.write("         \t\t\t\t\t   onclick='location.href=\"");
      out.print(request.getContextPath() );
      out.write("/member/memberView?memberId=");
      out.print(memberLoggedIn.getMemberId() );
      out.write("\";' />\r\n");
      out.write("         \t\t\t\t\t\t<!-- // 물음표 기준 왼쪽은 url, 오른쪽은 (사용자)data -->\r\n");
      out.write("         \t\t\t\t&nbsp;\r\n");
      out.write("         \t\t\t\t<input type=\"button\" \r\n");
      out.write("         \t\t\t\t\t   value=\"로그아웃\" \r\n");
      out.write("         \t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/member/logout'\" />\r\n");
      out.write("         \t\t\t</td>\r\n");
      out.write("         \t\t</tr>\r\n");
      out.write("         \t</table>\r\n");
      out.write("         ");
 } 
      out.write("\r\n");
      out.write("         </div>\r\n");
      out.write("         <!-- 로그인끝 -->\r\n");
      out.write("         <!-- 메인메뉴 시작 -->\r\n");
      out.write("         <!-- nav>ul.main-nav>li*3 -->\r\n");
      out.write("         <nav>\r\n");
      out.write("         \t<ul class=\"main-nav\">\r\n");
      out.write("         \t\t<li><a href=\"#\">Home</a></li>\r\n");
      out.write("         \t\t<li><a href=\"#\">공지사항</a></li>\r\n");
      out.write("         \t\t<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/board/boardList\">게시판</a></li>\r\n");
      out.write("         \t\t\r\n");
      out.write("         \t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						if (memberLoggedIn != null && "admin".equals(memberLoggedIn.getMemberId())) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/memberList\">회원관리</a></li>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("         </nav>\r\n");
      out.write("         <!-- 메인메뉴 끝 -->\r\n");
      out.write("         \r\n");
      out.write("      </header>\r\n");
      out.write("      \r\n");
      out.write("      <section id=\"content\">");
      out.write('\r');
      out.write('\n');

	Board b = (Board)request.getAttribute("board");
	List<BoardComment> commentList = (List<BoardComment>)request.getAttribute("commentList");
	System.out.println("commentList=" + commentList);

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/board.css\" />\r\n");
      out.write("<script>\r\n");
      out.write("function fileDownload(oName, rName){\r\n");
      out.write("\tvar url = \"");
      out.print(request.getContextPath() );
      out.write("/board/fileDownload\";\r\n");
      out.write("\t// oName에는 한글, 공백 등 문자가 섞여 있을 수 있기 때문에 인코딩 처리가 필요하다.\r\n");
      out.write("\t// 크롬 브라우저는 별도의 인코딩처리가 필요없지만,\r\n");
      out.write("\t// IE는 암묵적인 인코딩을 지원하지 않으므로,\r\n");
      out.write("\t// 명시적인 인코딩 처리가 필요하다.\r\n");
      out.write("\toName = encodeURIComponent(oName);\r\n");
      out.write("\tconsole.log(\"oName=\", oName);\r\n");
      out.write("\tlocation.href = url + \"?oName=\" + oName + \"&rName=\" + rName;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<section id=\"board-container\">\r\n");
      out.write("\t<h2>게시판</h2>\r\n");
      out.write("\t<table id=\"tbl-board-view\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>글번호</th>\r\n");
      out.write("\t\t\t<td>");
      out.print(b.getBoardNo() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t<td>");
      out.print(b.getBoardTitle() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>작성자</th>\r\n");
      out.write("\t\t\t<td>");
      out.print(b.getBoardWriter() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>조회수</th>\r\n");
      out.write("\t\t\t<td>");
      out.print(b.getReadCount() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>첨부파일</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<!-- 첨부파일이 있는 경우만 표시돼야 함 -->\r\n");
      out.write("\t\t\t\t");
if(b.getOriginalFileName()!=null) { 
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"javascript:fileDownload(\r\n");
      out.write("\t\t\t\t\t\t  '");
      out.print(b.getOriginalFileName() );
      out.write("',\r\n");
      out.write("\t\t\t\t\t\t  '");
      out.print(b.getRenamedFileName() );
      out.write("');\">\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/file.png\" \r\n");
      out.write("\t\t\t\t\t\t alt=\"첨부파일\"\r\n");
      out.write("\t\t\t\t\t\t width=\"16px\" />\r\n");
      out.write("\t\t\t\t\t<!-- 파일명 -->\r\n");
      out.write("\t\t\t\t\t");
      out.print(b.getOriginalFileName() );
      out.write("\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>내용</th>\r\n");
      out.write("\t\t\t<td>");
      out.print(b.getBoardContent() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<!-- 글작성자/관리자인 경우만 표시돼야 함 -->\r\n");
      out.write("\t\t");
if(memberLoggedIn!= null && 			 
			(b.getBoardWriter().equals(memberLoggedIn.getMemberName()) 
			|| "admin".equals(memberLoggedIn.getMemberId())))
		{
      out.write("\r\n");
      out.write("\t\t<tr>\t\r\n");
      out.write("\t\t\t<th colspan=\"2\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value = \"수정하기\" onclick=\"updateBoard()\" />\r\n");
      out.write("\t\t\t\t<input type=\"button\" value = \"삭제하기\" onclick=\"deleteBoard()\" />\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<hr style=\"margin-top: 30px;\"/>\r\n");
      out.write("\t<!-- 댓글시작 -->\r\n");
      out.write("\t<div id=\"comment-container\">\r\n");
      out.write("\t\t<div class=\"comment-editor\">\r\n");
      out.write("\t\t\t<!-- 댓글 작성할 수 있는 폼작성 -->\r\n");
      out.write("\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/board/boardCommentInsert\"\r\n");
      out.write("\t\t\t\t  method=\"post\"\r\n");
      out.write("\t\t\t\t  name=\"boardCommentFrm\">\r\n");
      out.write("\t\t\t\t<!-- 게시글 참조 -->\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" \r\n");
      out.write("\t\t\t\t\t   name=\"boardRef\"\r\n");
      out.write("\t\t\t\t\t   value=\"");
      out.print(b.getBoardNo() );
      out.write("\" />\r\n");
      out.write("\t\t\t\t<!-- 작성자(현재 로그인한 사람) -->\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" \r\n");
      out.write("\t\t\t\t\t   name=\"boardCommentWriter\"\r\n");
      out.write("\t\t\t\t\t   value=\"");
      out.print(memberLoggedIn!=null?memberLoggedIn.getMemberId():"" );
      out.write("\" />\r\n");
      out.write("\t\t\t\t<!-- 댓글 번호 -->\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" \r\n");
      out.write("\t\t\t\t\t   name=\"boardCommentLevel\"\r\n");
      out.write("\t\t\t\t\t   value=\"1\" /><!-- 댓글레벨 : 1 -->\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" \r\n");
      out.write("\t\t\t\t\t   name=\"boardCommentRef\"\r\n");
      out.write("\t\t\t\t\t   value=\"0\" />\r\n");
      out.write("\t\t\t\t<textarea name=\"boardCommentContent\" \r\n");
      out.write("\t\t\t\t\t\t  cols=\"60\" \r\n");
      out.write("\t\t\t\t\t\t  rows=\"3\"></textarea>\r\n");
      out.write("\t\t\t\t<button type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\tid=\"btn-insert\">\r\n");
      out.write("\t\t\t\t\t등록\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div><!-- end of .comment-editor -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 댓글목록테이블 -->\r\n");
      out.write("\t\t<table id=\"tbl-comment\">\r\n");
      out.write("\t\t\t");

				for (BoardComment bc : commentList) {
					if (bc.getBoardCommentLevel() == 1) {
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr class=\"level1\">\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<sub class=\"comment-writer\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(bc.getBoardCommentWriter() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</sub>\r\n");
      out.write("\t\t\t\t\t\t<sub class=\"comment-date\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(bc.getBoardCommentDate() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</sub>\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(bc.getBoardCommentContent() );
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<!-- 대댓글 달 수 있는 버튼 -->\r\n");
      out.write("\t\t\t\t\t\t<!-- 댓글에 대한 고유번호를 버튼이 가지고 있게 -->\r\n");
      out.write("\t\t\t\t\t\t<!-- 조건1. 본인과 관리자만 삭제버튼이 보이게 -->\r\n");
      out.write("\t\t\t\t\t\t<!-- 조건2. 삭제 후에는 댓글 페이지 다시 보이게 -->\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn-reply\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"");
      out.print(bc.getBoardCommentNo());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t답글\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t");
if(memberLoggedIn!= null && 			 
							(bc.getBoardCommentWriter().equals(memberLoggedIn.getMemberId()) 
						|| "admin".equals(memberLoggedIn.getMemberId())))
						{
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/board/boardCommentDelete\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"boardNo\" value=\"");
      out.print(b.getBoardNo() );
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"boardCommentNo\" value=\"");
      out.print(bc.getBoardCommentNo() );
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"boardCommentLevel\" value=\"1\" />\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" class=\"btn-delete\" onclick=\"return validate();\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t");
 }
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				} else {
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr class=\"level2\">\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<sub class=\"comment-writer\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(bc.getBoardCommentWriter() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</sub>\r\n");
      out.write("\t\t\t\t\t\t<sub class=\"comment-date\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(bc.getBoardCommentDate() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</sub>\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(bc.getBoardCommentContent() );
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t");
if(memberLoggedIn!= null && 			 
							((bc.getBoardCommentWriter().equals(memberLoggedIn.getMemberId()) 
						|| "admin".equals(memberLoggedIn.getMemberId()))))
						{
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/board/boardCommentDelete\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"boardNo\" value=\"");
      out.print(b.getBoardNo() );
      out.write("\"/>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"boardCommentNo\" value=\"");
      out.print(bc.getBoardCommentNo());
      out.write("\"/>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"boardCommentLevel\" value=\"2\"/>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" class=\"btn-delete\" onclick=\"return validate();\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t");
 }
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");

				}
				}
			
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<!-- 댓글 끝 -->\r\n");
      out.write("\t</div><!-- end of .comment-container -->\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// textarea click이벤트핸들러(로그인여부검사)\r\n");
      out.write("\t\t$(\"[name=boardCommentContent]\").on('click', function() {\r\n");
      out.write("\t\t\t/* 자바스크립틀릿보다 자바코드가 먼저 읽기 때문에\r\n");
      out.write("\t\t\t로그인했다면 false 로그인하지않았다면 true*/\r\n");
      out.write("\t\t\tif (");
      out.print(memberLoggedIn == null);
      out.write(") {\r\n");
      out.write("\t\t\t\tloginAlert();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t// 댓글form submit이벤트핸들러\r\n");
      out.write("\t\t$(\"[name=boardCommentFrm]\").submit(function(e) {\r\n");
      out.write("\t\t\tif (");
      out.print(memberLoggedIn == null);
      out.write(") {\r\n");
      out.write("\t\t\t\tloginAlert();\r\n");
      out.write("\t\t\t\te.preventDefault(); // submit방지\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// boardCommentContent 유효성검사\r\n");
      out.write("\t\t\tvar len = $(\"[name=boardCommentContent]\").val().trim().length;\r\n");
      out.write("\t\t\tif (len == 0) {\r\n");
      out.write("\t\t\t\talert(\"댓글을 작성하세요.\");\r\n");
      out.write("\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tfunction loginAlert() {\r\n");
      out.write("\t\t\talert(\"로그인 후 이용할 수 있습니다.\");\r\n");
      out.write("\t\t\t/* 화면 상단에 있는 아이디에 포커스 주기 */\r\n");
      out.write("\t\t\t$(\"#memberId\").focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\".btn-reply\").on(\"click\", function(){\r\n");
      out.write("\t\t\t");
 if(memberLoggedIn != null){ 
      out.write("\r\n");
      out.write("\t\t\t/* 로그인한 경우 */\r\n");
      out.write("\t\t\t\t var tr = $(\"<tr></tr>\");\r\n");
      out.write("\t\t         var html = '<td style=\"display:none; text-align:left;\" colspan=\"2\">';\r\n");
      out.write("\t\t         html+= '<form action = \"boardCommentInsert\" method=\"post\">';\r\n");
      out.write("\t\t         html+= '<input type=\"hidden\" name= \"boardRef\" value=\"");
      out.print(b.getBoardNo());
      out.write("\">';\r\n");
      out.write("\t\t         html+= '<input type=\"hidden\" name= \"boardCommentWriter\" value=\"");
      out.print(memberLoggedIn.getMemberId());
      out.write("\">';\r\n");
      out.write("\t\t         html+= '<input type=\"hidden\" name= \"boardCommentLevel\" value=\"2\">';\r\n");
      out.write("\t\t         html+= '<input type=\"hidden\" name= \"boardCommentRef\" value=\"'+$(this).val()+'\">';\r\n");
      out.write("\t\t         html+= '<textarea name=\"boardCommentContent\" cols=\"60\" rows=\"1\"></textarea>';\r\n");
      out.write("\t\t         html+= '<button type=\"submit\" class=\"btn-insert2\">답글</button>';\r\n");
      out.write("\t\t         html+= '</form></td>';\r\n");
      out.write("\t\t         tr.html(html);/* 답글버튼을 누르면 동적으로 위 태그들이 나타나게 함 */\r\n");
      out.write("\t\t         \r\n");
      out.write("\t\t         console.log(\"boardCommentRef value=\", $(this).val());\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttr.insertAfter($(this).parent().parent())\r\n");
      out.write("\t\t\t\t  .children(\"td\").slideDown(800);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 한 번 실행후에는 이벤트 핸들러 제거\r\n");
      out.write("\t\t\t\t$(this).off('click');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 생성된 폼에 대해 submit이벤트핸들러 (유효성검사)\r\n");
      out.write("\t\t\t\ttr.find('form').sumbmit(function(e){\r\n");
      out.write("\t\t\t\t\tvar len = $(this).find(\"textarea\").val().trim().length;\r\n");
      out.write("\t\t\t\t\tif(len == 0){\r\n");
      out.write("\t\t\t\t\t\t// 길이가 0이면 제출하지말것\r\n");
      out.write("\t\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t/* 로그인하지 않은 경우 */\r\n");
      out.write("\t\t\t\tloginAlert();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction validate(){\r\n");
      out.write("\t\t\tif(confirm(\"이 댓글을 정말 삭제하시겠습니까?\")){\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</section>\r\n");
      out.write("<!-- 글작성자/관리자인 경우만 수정삭제가능 -->\r\n");
if(memberLoggedIn!= null && 			 
	(b.getBoardWriter().equals(memberLoggedIn.getMemberName()) 
	|| "admin".equals(memberLoggedIn.getMemberId())))
{
      out.write("\r\n");
      out.write("<form action=\"");
      out.print(request.getContextPath() );
      out.write("/board/boardDelete\"\r\n");
      out.write("\t  name=\"boardDelFrm\"\r\n");
      out.write("\t  method=\"post\" >\r\n");
      out.write("\t  <input type=\"hidden\" \r\n");
      out.write("\t  \t\t name=\"boardNo\"\r\n");
      out.write("\t  \t\t value=\"");
      out.print(b.getBoardNo() );
      out.write("\" />\r\n");
      out.write("\t  <!-- 첨부파일이 있는 경우에는 파일도 함께 삭제 -->\r\n");
      out.write("\t  <!-- 서버에 저장된 실제 파일명이 필요하다 -->\r\n");
      out.write("\t  <input type=\"hidden\" \r\n");
      out.write("\t  \t\t name=\"rName\"\r\n");
      out.write("\t  \t\t value=\"");
      out.print(b.getRenamedFileName() );
      out.write("\" />\r\n");
      out.write("</form>\r\n");
      out.write("<script>\r\n");
      out.write("function updateBoard(){\r\n");
      out.write("\tlocation.href = \"");
      out.print(request.getContextPath() );
      out.write("/board/boardUpdate?boardNo=");
      out.print(b.getBoardNo() );
      out.write("\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function deleteBoard(){\r\n");
      out.write("\tif(!confirm(\"이 게시글을 정말 삭제하시겠습니까?\")){\r\n");
      out.write("\t\t/* false인 경우만 리턴처리 */\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t$(\"[name=boardDelFrm]\").submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
 } 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write(" </section>\r\n");
      out.write("      <footer>\r\n");
      out.write("         <p>&lt;Copyright 2017. <strong>KH정보교육원</strong>. All rights reserved.&gt;</p>\r\n");
      out.write("      </footer>\r\n");
      out.write("   </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
