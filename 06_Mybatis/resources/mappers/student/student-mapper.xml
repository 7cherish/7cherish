<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mapper파일은 query를 담고 있다. -->
<mapper namespace="student">
<!-- 
    typeAliases를 설정하지 않으면 parameterType에 풀패키지명을 적어야 한다.   
    <insert id="insertStudent1" parameterType="com.kh.student.vo.Student"> 
--> 
<!-- 
    구문의 이름 : insertStudent1, 
    student타입의 파라미터를 받는다.
    파라미터에 대한 표기법은 #{파라미터별칭}으로, 
    Mybatis에게 PreparedStatement를 만들도록 지시하는데, 
    JDBC에서는 PreparedStatement 내 '?'와 그 쓰임이 동일하다.
 -->
	<insert id="insertStudent1" parameterType="student">
		<!-- 필드명 #{} -->
		<!-- vo에서 사용하면 필드명에서 찾아온다. -->
		insert into student values(seq_student_no.nextval, #{studentName},
														   #{studentTel}, 
														   #{studentEmail}, 
														   #{studentAddr}, 
														   default)
	</insert>
	<!-- Map에서 사용하면 키값에서 찾아온다. -->
	<insert id="insertStudent2" parameterType="map">
		insert into student values(seq_student_no.nextval, #{studentName},
														   #{studentTel} ,
														   #{studentEmail}, 
														   #{studentAddr}, 
														   default)
	</insert>
	<!-- 학생총인원수를 구하는 쿼리 -->
	<!-- resultType을 반드시 명시 -->
	<select id="selectStudentCount" resultType="_int">
		select count(*) from student
	</select>
	
	<!-- 학생번호로 학생이름을 구하는 쿼리 -->
	<select id="selectStudentName" parameterType="_int" resultType="string">
		select student_name
		from student
		where student_no = #{stdtNo}
	</select>
	
	<!--  학생번호로 학생을 삭제하는 쿼리 -->
	<delete id="deleteStudent" parameterType="_int">
		delete from student where student_no = #{stdtNo}
	</delete>
	
	<!-- 학생 한명의 정보를 가져오는 쿼리 -->
	<select id="selectOneStudent" parameterType="_int" resultType="student">
		select * from student
		where student_no = #{student_no}
	</select>
	
	<!-- 학생 리스트 정보를 리턴하는 쿼리 -->
	<!-- resultType에는 한 행에 담길 것만 챙겨주면 됨. List적으면 안 됨. -->
	<select id="selectList" resultType="student">
		select * from student
		order by student_no desc
	</select>
	
	<!-- 학생 리스트 정보를 Map으로 리턴하는 쿼리 -->
	<select id="selectMapList" resultMap="studentMap">
		select * from student
		order by student_no desc
	</select>
	<!-- 위의 select속성의 resultMap에 기입한 값이 resultMap태그의 id와 같아야 한다. -->
	<resultMap type="map" id="studentMap">
		<!-- column : DB의 컬럼명 -->
		<!-- property : 실제 key값으로 사용하게 될 문자 -->
		<!-- column명이 같을 때는 지정해주지 않아도 된다. -->
		<!-- <result column="student_no" property="stdtNo" /> -->
		<!-- <result column="student_name" property="stdtName" />
		<result column="student_tel" property="stdtTel" />
		<result column="student_email" property="stdtEmail" />
		<result column="student_addr" property="stdtAddr" />
		<result column="reg_date" property="regDate" javaType="java.sql.Date" /> -->
	</resultMap>
</mapper>
